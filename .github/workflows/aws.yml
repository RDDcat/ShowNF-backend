name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Change wrapper permissions
      run: chmod +x ./gradlew
      
    - name: Init gradle wrapper
      run: gradle init
      
    - name: Init gradle wrapper
      run: gradle wrapper
      
    - name: Change wrapper permissions
      run: chmod +x ./gradlew
      
    # Gradle Build
    - name: Build with Gradle Clean
      run: ./gradlew clean 
      
    # Gradle Build
    - name: Build with Gradle Build
      run: ./gradlew build -x test

    # DockerHub 로그인
    - name: DockerHub Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # Docker 이미지 빌드
    - name: Docker Image Build
      run: docker build -t rddcat/reptile .
      
      # run: docker build -f DockerFile -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }} .

    # DockerHub Push
    - name: DockerHub Push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}

    # EC2 인스턴스 접속 및 애플리케이션 실행
    - name: Application Run
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_KEY }}

        script: |
          sudo docker kill ${{ secrets.PROJECT_NAME }}
          sudo docker rm -f ${{ secrets.PROJECT_NAME }}
          sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}

          sudo docker run -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
          -name ${{ secrets.PROJECT_NAME }} \    
          --SPRING_DATASOURCE_URL=${{ secrets.DB_URL }} \
          --SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} \
          --SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
          --AWS_S3_ACCESSKEY=${{ secrets.AWS_S3_ACCESSKEY }} \
          --AWS_S3_SECRETKEY=${{ secrets.AWS_S3_SECRETKEY }} \
          -d rddcat/reptile
