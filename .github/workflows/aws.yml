name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Init gradle wrapper
        run: gradle init

      - name: Init gradle wrapper
        run: gradle wrapper

      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      
      # Gradle Build
      - name: Build with Gradle Clean
        run: ./gradlew clean

      # Gradle Build
      - name: Build with Gradle Build
        run: ./gradlew build -x test

      # DockerHub 로그인
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Docker 이미지 빌드
      - name: Docker Image Build
        run: docker build -t rddcat/reptile .

        # run: docker build -f DockerFile -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }} .

      # DockerHub Push
      - name: DockerHub Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}

      # EC2 : 기존 이미지 삭제, 이미지 업데이트
      - name: Application setting
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}

          script: |
            sudo docker kill ${{ secrets.PROJECT_NAME }}
            sudo docker rm -f ${{ secrets.PROJECT_NAME }}
            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      # EC2 : 도커 이미지 실행
      - name: Application Run
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}

          run: |
            sudo docker run -p 8080:${{ secrets.PORT }} --name ${{ secrets.PROJECT_NAME }} -d ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }} -e DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} -e PROJECT_NAME=${{ secrets.PROJECT_NAME }} -e DB_URL=${{ secrets.DB_URL }} -e DB_USERNAME=${{ secrets.DB_USERNAME }} -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} -e AWS_S3_ACCESSKEY=${{ secrets.AWS_S3_ACCESSKEY }} -e AWS_S3_SECRETKEY=${{ secrets.AWS_S3_SECRETKEY }} -e REGION=${{ secrets.REGION }} -e BUCKET_NAME=${{ secrets.BUCKET_NAME }}  
          
